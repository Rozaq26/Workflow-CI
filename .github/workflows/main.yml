name: MLflow CI/CD Pipeline

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  mlflow-run:
    runs-on: ubuntu-latest
    env:
      MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
      MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}
      MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.12.7
        uses: actions/setup-python@v4
        with:
          python-version: "3.12.7"

      - name: Verify Environment Variables
        run: |
          echo "MLFLOW_TRACKING_URI: $MLFLOW_TRACKING_URI"
          if [ -z "$MLFLOW_TRACKING_USERNAME" ] || [ -z "$MLFLOW_TRACKING_PASSWORD" ]; then
            echo "Error: MLflow credentials tidak di-set!"
            exit 1
          fi

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r MLProject/requirements.txt mlflow

      - name: Run MLflow project
        run: |
          mlflow run MLProject --env-manager=local

      - name: Get latest MLflow run_id
        id: get-run-id
        run: |
          python <<EOF
          import mlflow
          client = mlflow.tracking.MlflowClient()
          runs = client.search_runs(experiment_ids=["0"], order_by=["start_time DESC"], max_results=1)
          if not runs:
              raise Exception("Tidak ada run MLflow yang ditemukan!")
          run_id = runs[0].info.run_id
          print(f"::set-output name=run_id::{run_id}")
          EOF

      - name: Download model artifacts
        run: |
          mlflow artifacts download --run-id ${{ steps.get-run-id.outputs.run_id }} --artifact-path model -d ./model_artifacts
          mv ./model_artifacts/model ./best_model

      - name: Build Docker Image
        run: |
          if [ ! -d "./best_model" ]; then
              echo "Error: Folder 'best_model' tidak ditemukan!"
              exit 1
          fi
          mlflow models build-docker --model-uri ./best_model --name diabetes_model

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Tag and Push Docker Image
        run: |
          docker tag diabetes_model ${{ secrets.DOCKER_USERNAME }}/diabetes_model:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/diabetes_model:latest

